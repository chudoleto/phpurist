
I. Чистим проект.
Файлы, которые появились при создании проекта и не нужны, я удалил.
В папке resources/views остались файлы. Если не нужны, удали их.

II. Прорабатываем бизнес-требования.

0. Заново создаем базу данных через миграции, там есть изменения.
Если хочешь, чтобы какие-то данные автоматически заполнялись, пропиши заполнение там же, в миграциях. 

1. Зарегистрировать двух пользователей (автоматом появятся два подразделения, пользователи будут с ролью рук. подразделения).
Даже если будешь прописывать автозаполнение, все равно сначала зарегистрируй их и проверь, всё ли работает.

2. В каждом подразделении добавляем по два пользователя: с ролью "Рук. проектов" и с ролью "Сотрудник".
Добавлять не под администратором, а под руководителями подразделений.  

3. Под каждым сотрудником с ролью "Рук. проектов" создаем по одному проекту.
 
4. У всех пользователей в гл. меню есть пункт "Задачи", работаем с ним:

 - При создании задачи требования к полям:
 
  * "Начало", "окончание", "крайний срок" должны быть датами. 
  Добавить вывод в формате "Y-m-d" файле view..., добавить валидацию на правильность ввода даты в контроллере при сохранении
  Пример - поле "крайний срок" в проекте
  
  * Поле "Статус" с типом строка, если не нужно, убрать из БД и из формы и проверку на обязательность.
  
 ---------- * Поле "Проект" - можно выбирать проекты своего подразделения или пустое значение 
  (примеры в модели User, процедура getSelectFieldOptions, параметр allow_empty).
  
  --------- теперь ставит только текущего* Поле "Ответственный": 
  Админ может выбрать всех, руководитель подразделения - только своих сотрудников, остальные - только себя.
  Можно выбирать пустое. Если выбрано пустое, при сохранении ставится текущий пользователь
  Пример в контроллере проекта, перед вызовом метода save(). 
  
6. Создать по одной задаче от каждого пользователя (их минимум 7: админ, два рук. подр., два рук. проектов, два сотрудника)
  
  - В списке задач:
  * Администратор видит все задачи, у остальных отбор: 
     руководитель подразделения - задачи сотрудников своего подразделения (по полю ответсвенный, он же User_id) 
     сотрудники - свои задачи (по полю ответсвенный, он же User_id)
     руководитель проекта - задачи своих проектов (по полю ответсвенный у ПРОЕКТА, выбранного в задаче, в запросе нужно будет использовать whereHas('Project', ...) )
  * Поля с датами вывести в виде дат (дд.мм.гггг).
   
 